plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'SSU.CROMI'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'org.apache.commons:commons-lang3:3.13.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    
    annotationProcessor 'jakarta.validation:jakarta.validation-api:3.0.2'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'com.h2database:h2'
    // Spring Security 추가
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // JWT 추가
    implementation 'io.jsonwebtoken:jjwt-api:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.12.6'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.12.6'

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    runtimeOnly 'com.mysql:mysql-connector-j'
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// 테스트 관련 설정
tasks.named('test') {
    useJUnitPlatform()
    // Mockito 경고 해결을 위한 JVM 인수 추가
    jvmArgs '--add-opens=java.base/java.lang=ALL-UNNAMED'
    jvmArgs '--add-opens=java.base/java.util=ALL-UNNAMED'
}
